#:kivy 2.0.0
#: import get_color_from_hex kivy.utils.get_color_from_hex
#:import MDFloatingActionButtonSpeedDial kivymd.uix.button.MDFloatingActionButtonSpeedDial
#: import get_color_from_hex kivy.utils.get_color_from_hex
#:import MDScreen kivymd.uix.screen.MDScreen
#:import MDProgressBar kivymd.uix.progressbar.MDProgressBar
#:import ZBarCam kivy_garden.zbarcam.ZBarCam
#:import hex kivy.utils.get_color_from_hex


<SplashScreen>:
    name: 'splash_screen'
    canvas.before:
        
        Rectangle:
            pos: self.pos
            size: self.size
            source:'images/splash.png'
        Rectangle:
            pos: self.width * 0.25, self.height * 0.3
            size: self.width * 0.5, self.height * 0.5
            source: 'images/logo1.png'
    MDScreen:
        MDFloatLayout:
            

            MDLabel:
                text: 'Loading...'
                halign: 'center'
                pos_hint: {'center_x': .5, 'center_y': .2}
                font_style: 'H5'
                theme_text_color:"Custom"
                text_color: 1, 1, 1, 1
            
<RegisterScreen>:
   
    BoxLayout:
        orientation: 'vertical'
        spacing:12
        padding:10
        canvas.before:
            Color:
                rgba:hex('#07CBFB') 
            Rectangle:
                pos: self.pos
                size: self.size
        
        BoxLayout:
            # padding: dp(20)
            # spacing: dp(20)
            size_hint_y: None
            height: dp(200)
            
            Image:
                source: 'images/logo.png'  
            
        BoxLayout:
            padding: dp(10)
            spacing: dp(10)
            orientation:'vertical'
            size_hint_y: None
            height:dp(5)
            
            MDLabel:
                text: 'User Registration'
                theme_text_color:'Custom'
                text_color:1,1,1,1
                halign: 'center'
                valign: 'center'
                font_style: 'H5'
                bold:True
        
        BoxLayout:
            padding: dp(10)
            spacing: dp(18)
            orientation: 'vertical'
            size_hint_y: None
            height: self.minimum_height
            
            MDTextField:
                id: first_name
                hint_text: 'First Name'
                # helper_text: " firstname could not be blank"
                # helper_text_mode: "on_error"
                # required: True
                line_color_normal:1,1,1,1
                mode: "fill"
                fill_color: 1, 1, 1, 1
                size_hint_y: None
                height: dp(40)
                multiline: False
           
            
            MDTextField:
                id: last_name
                hint_text: 'Last Name'
                # helper_text: " lastname could not be blank"
                # helper_text_mode: "on_error"
                # required: True
                mode: "fill"
                fill_color: 1, 1, 1, 1
                line_color_normal:1,1,1,1
                size_hint_y: None
                height: dp(40)
                multiline: False
                
            MDTextField:
                id: mobile
                hint_text: 'Phone Number'
                # helper_text: " Phone Number could not be blank"
                # helper_text_mode: "on_error"
                # required: True
                mode: "fill"
                fill_color: 1, 1, 1, 1
                line_color_normal:1,1,1,1
                size_hint_y: None
                height: dp(50)
                multiline: False
                
            MDTextField:
                id: email
                hint_text: 'Email'
                # helper_text: " Email could not be blank"
                # helper_text_mode: "on_error"
                # required: True
                mode: "fill"
                fill_color: 1, 1, 1, 1
                line_color_normal:1,1,1,1
                size_hint_y: None
                height: dp(50)
                multiline: False
                
            
            MDTextField:
                id: password
                hint_text: 'Password'
                # helper_text: " Password could not be blank"
                # helper_text_mode: "on_error"
                # required: True
                mode: "fill"
                fill_color: 1, 1, 1, 1
                line_color_normal:1,1,1,1
                password: True
                size_hint_y: None
                height: dp(50)
                multiline: False
            
        BoxLayout:
            size_hint_y: None
            height: dp(50)
            padding: dp(10)
            spacing: dp(10)
            
            MDRoundFlatButton:
                text: 'Register'
                text_color:hex('#07CBFB') 
                size_hint_x: 0.5
                md_bg_color: 1, 1, 1, 1
                on_press:root.register_user()
            
            MDRoundFlatButton:
                text: 'Login'
                text_color:hex('#07CBFB') 
                size_hint_x: 0.5
                md_bg_color: 1, 1, 1, 1
                on_press: root.manager.current = 'login'

<LoginScreen>:
    MDScreen:
        name:"login"
        MDFloatLayout:
            md_bg_color:hex('#07CBFB')
            Image:
                source:"images/logo1.png"
                pos_hint:{"center_y":0.85,"center_x":0.5}
                size_hint_x: 0.90
                size_hint_y: 0.40
            
            MDLabel:
                text: "Login Here"
                font_style:"H1"
                pos_hint:{"center_x":.5,"center_y":0.65}
                halign:"center"
                color:hex("#FFFFFF")
                font_size:"35sp"
                bold:True
            
            MDFloatLayout:
                size_hint:0.75,.085
                pos_hint:{"center_x":.5,"center_y":0.5}
                canvas:
                    Color:
                        rgb:1,1,1,1
                    RoundedRectangle:
                        size:self.size
                        pos: self.pos
                        radius:[25]
                TextInput:
                    id: email
                    hint_text:"Email"
                    size_hint:1,None
                    height:self.minimum_height
                    pos_hint:{"center_x":.5,"center_y":0.5}
                    cursor_color:0,0,0,1
                    multiline:False
                    background_color:1,1,1,0
                    foreground_color:127/255,202/255,248/255,1
                    padding:26
                    hint_text_color:195/255,195/255,195/255,1
                    
            
            MDFloatLayout:
                size_hint:0.75,.085
                pos_hint:{"center_x":.5,"center_y":0.4}
                canvas:
                    Color:
                        rgb:1,1,1,1
                    RoundedRectangle:
                        size:self.size
                        pos: self.pos
                        radius:[25]
                TextInput:
                    id: password
                    hint_text:"Password"
                    size_hint:1,None
                    height:self.minimum_height
                    pos_hint:{"center_x":.5,"center_y":0.4}
                    cursor_color:0,0,0,1
                    multiline:False
                    background_color:1,1,1,0
                    foreground_color:127/255,202/255,248/255,1
                    padding:26
                    hint_text_color:195/255,195/255,195/255,1
                    password: True


          
            Button:
                text: "Reset Password"
                size_hint:.4,.075
                font_size: sp(18)
                pos_hint:{"center_x":.5,"center_y":0.3}
                background_color:1,1,1,0
                color:1,1,1,1
                on_press: root.manager.current = 'forget_password'
                canvas.before:
                    Color:
                        rgb:hex('#07CBFB')
                    RoundedRectangle:
                        size:self.size
                        pos:self.pos
                        radius:[25]



            Button:
                text: "Login"
                color:
                size_hint:.5,.085
                font_size: sp(25)
                pos_hint:{"center_x":.5,"center_y":0.20}
                background_color:1,1,1,0
                color:127/255,202/255,248/255,1
                on_press:root.login()
                canvas.before:
                    Color:
                        rgb:1,1,1,1
                    RoundedRectangle:
                        size:self.size
                        pos:self.pos
                        radius:[25]

            

            Button:
                text: "Register here "
                font_style:"H2"
                size_hint:.4,.075
                font_size: sp(18)
                pos_hint:{"center_x":.5,"center_y":0.1}
                background_color:1,1,1,0
                color:1,1,1,1
                on_press: root.manager.current = 'register'
                canvas.before:
                    Color:
                        rgb:hex('#07CBFB')
                    RoundedRectangle:
                        size:self.size
                        pos:self.pos
                        radius:[25]


<ForgetPasswordScreen>:
    ScreenManager:
        Screen:
            name: "forget_password_screen"

            MDRelativeLayout:
                MDTopAppBar:
                    id: toolbar
                    title: "Forget Password"
                    pos_hint: {'top':1.0}
                    md_bg_color: 0, 0.7, 1, 1 
                    left_action_items: [["arrow-left", lambda *args : setattr(root.manager, "current", "login")]]


                MDTextField:
                    id: email_field
                    hint_text: "Email"
                    helper_text: "Enter your registered email address"
                    helper_text_mode: "on_focus"
                    size_hint: None, None
                    size: dp(270), dp(40)
                    pos_hint: {"center_x": 0.5, "top": 0.8}
                    on_text_validate: app.on_email_entered(self.text)

                MDRoundFlatButton:
                    text: "Submit"
                    size_hint: None, None
                    size: dp(200), dp(40)
                    pos_hint: {"center_x": 0.5, "top": 0.6}
                    on_press: root.send_reset_password_request()

<OTPScreen>:
    ScreenManager:
        Screen:
            name: "OTP_Screen"
            MDRelativeLayout:
                
                MDTopAppBar:
                    id: toolbar
                    title: "Enter 6 digit otp"
                    pos_hint: {'top':1.0}
                    md_bg_color: 0, 0.7, 1, 1 
                    left_action_items: [["arrow-left", lambda *args : setattr(root.manager, "current", "forget_password")]]
                MDTextField:
                    id: otp_field
                    hint_text: "OTP"
                    helper_text_mode: "on_focus"
                    size_hint: None, None
                    size: dp(270), dp(40)
                    pos_hint: {"center_x": 0.5, "top": 0.8}
                    
                
                MDRoundFlatButton:
                    text: "Submit"
                    size_hint: None, None
                    size: dp(200), dp(40)
                    pos_hint: {"center_x": 0.5, "top": 0.6}
                    on_press: root.send_otp_request()



<ResetPasswordScreen>:
    MDTopAppBar:
        id: toolbar
        title: "Reset Password"
        pos_hint: {'top':1.0}
        md_bg_color: 0, 0.7, 1, 1    
    FloatLayout:
        size_hint: 1, 1
        pos_hint: {'top':0.9}
        
        
        MDTextField:
            id: password_field
            hint_text: "New Password"
            helper_text_mode: "on_focus"
            size_hint_x: None
            width: 300
            pos_hint: {'center_x': 0.5, 'top': 0.85}

        MDTextField:
            id: confirm_password_field
            hint_text: "Confirm Password"
            helper_text_mode: "on_focus"
            size_hint_x: None
            width: 300
            height:100
            pos_hint: {'center_x': 0.5, 'top': 0.72}
            password: True

        MDRoundFlatButton:
            text: "Reset Password"
            font_size: "20sp"
            size_hint_x: 0.3
            pos_hint: {'center_x': 0.5, 'top': 0.55}
            on_press: root.send_passwordset_request()        


# Food Hygiene!

<BoxLayoutExample6>:
    orientation: "vertical"
    spacing: "20dp"
    Button:
        text: "Food Hygiene!"
        size: "300dp", "100dp"
        size_hint: None, None
        # x, center_x, right
        # y, center_y, top
        pos_hint: { "center_x": .50 }
    Button:
        orientation: "vertical"
        text: "Allergies Advice!"
        size: "300dp", "100dp"
        size_hint: None, None
        # x, center_x, right
        # y, center_y, top
        pos_hint: { "center_x": .5 }
    Button:
        orientation: "vertical"
        text: "Freezer Advice!"
        size: "300dp", "100dp"
        size_hint: None, None
        # x, center_x, right
        # y, center_y, top
        pos_hint: { "center_x": .5 }
    Button:
        orientation: "vertical"
        text: "Recycling Advice!"
        size: "300dp", "100dp"
        size_hint: None, None
        # x, center_x, right
        # y, center_y, top
        pos_hint: { "center_x": .5 }


 # Wakeup Screen

<BoxLayoutExample1>:
    orientation: "vertical"
    spacing: "20dp"
    Label:
        text: "Logo"
        size: "200dp", "300dp"
        size_hint: None, None
        # x, center_x, right
        # y, center_y, top
        pos_hint: { "center_x": .5 }
    Button:
        text: "Sign In"
        size: "200dp", "80dp"
        size_hint: None, None
        # x, center_x, right
        # y, center_y, top
        pos_hint: { "center_x": .5 }
        color: 0, 0, 1, 1
    Button:
        text: "New User, Sign Up"
        size: "200dp", "80dp"
        size_hint: None, None
        # x, center_x, right
        # y, center_y, top
        pos_hint: { "center_x": .5 }
        color: 0, 0, 1, 1           


<SettingsScreen>:
    
    MDScreen:

        MDNavigationLayout:
           
            MDScreenManager:
                id: screen_manager
                MDScreen:

                    MDTopAppBar:
                        id: toolbar
                        title: "App Settings"
                        elevation: 4
                        pos_hint: {"top": 1}
                        left_action_items: [["menu", lambda x: nav_drawer.set_state("open")]]
                    
                    BoxLayout:
                        orientation: "vertical"
                        padding: dp(16)
                        spacing: dp(16)
                        MDBoxLayout:
                            orientation: "horizontal"
                        
                            MDLabel:
                                text: "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed non risus. Suspendisse lectus tortor, dignissim sit amet, adipiscing nec, ultricies sed, dolor. Cras elementum ultrices diam. Maecenas ligula massa, varius a, semper congue, euismod non, mi. Proin porttitor, orci nec nonummy molestie, enim est eleifend mi, non fermentum diam nisl sit amet erat. Duis semper. Duis arcu massa, scelerisque vitae, consequat in, pretium a, enim. Pellentesque congue. Ut in risus volutpat libero pharetra tempor. Cras vestibulum bibendum augue. Praesent egestas leo in pede. Praesent blandit odio eu enim. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed non risus. Suspendisse lectus tortor, dignissim sit amet, adipiscing nec, ultricies sed, dolor. Cras elementum ultrices diam. Maecenas ligula massa, varius a, semper congue, euismod non, mi. Proin porttitor, orci nec nonummy molestie, enim est eleifend mi, non fermentum diam nisl sit amet erat. Duis semper. Duis arcu massa, scelerisque vitae, consequat in, pretium a, enim. Pellentesque congue. Ut in risus volutpat libero pharetra tempor. Cras vestibulum bibendum augue. Praesent egestas leo in pede. Praesent blandit odio eu enim."
                                halign: "center"
                                font_style:'Caption'
                            

            MDNavigationDrawer:
                id: nav_drawer
                radius: (0, 10, 10, 0)
                md_bg_color:app.theme_cls.primary_color
                   
                MDNavigationDrawerMenu:

                    MDNavigationDrawerHeader:
                        title: ""
                        title_color: "#87CEEB"
                        text: "Settings"
                        theme_text_color: 'Custom'
                        text_color:1,1,1,1
                        bold: True
                        spacing: "4dp"
                        padding: 0, 0, 0, "56dp"
                       
                    
                    MDTextButton:
                        text: "Home"
                        theme_text_color: 'Custom'
                        text_color:1,1,1,1
                        bold: True
                        on_press: root.manager.current = 'home'
                       
                    MDNavigationDrawerDivider:

                    MDTextButton:
                        text: "Edit Profile"
                        theme_text_color: 'Custom'
                        text_color:1,1,1,1
                        bold: True
                        on_press: root.manager.current = 'edit_profile'

                    MDNavigationDrawerDivider:

                    MDTextButton:
                        text: "Notifications"
                        theme_text_color: 'Custom'
                        text_color:1,1,1,1
                        bold: True
                        on_press: root.manager.current = 'notifications'
                    
                    MDNavigationDrawerDivider:

                    MDTextButton:
                        text: "Food Hygiene"
                        theme_text_color: 'Custom'
                        text_color:1,1,1,1
                        bold: True
                        on_press: root.manager.current = 'fridge_hygiene'
                   
                    MDNavigationDrawerDivider:

                    MDTextButton:
                        text: "Logout"
                        theme_text_color: 'Custom'
                        text_color:1,1,1,1
                        bold: True
                        on_press: root.manager.current = 'login'
                    MDNavigationDrawerDivider:

                    
<EditProfileScreen>: 
    
    MDTopAppBar:
        id: toolbar
        title: "Edit Customer Profile"
        pos_hint: {'top':1.0}
        left_action_items: [["arrow-left", lambda *args : setattr(root.manager, "current", "settings")]]

    FloatLayout:
        size_hint: 1, 1
        pos_hint: {'top':0.9}

        MDTextField:
            id: first_name_field
            hint_text: "FirstName"
            helper_text_mode:"on_focus"
            size_hint_x: 0.65
            size_hint_y: 0.10
            pos_hint: {'center_x': 0.5, 'top': 0.95}

        MDTextField:
            id: last_name_field
            hint_text: "Lastname"
            helper_text_mode: "on_focus"
            size_hint_x: 0.65
            size_hint_y: 0.10
            pos_hint: {'center_x': 0.5, 'top': 0.86}
           
        
        MDTextField:
            id: email_field
            hint_text: "Email"
            helper_text_mode: "on_focus"
            size_hint_x: 0.65
            size_hint_y: 0.10
            pos_hint: {'center_x': 0.5, 'top': 0.77}
           

        MDTextField:
            id: phone_field
            hint_text: "phone Number"
            helper_text_mode: "on_focus"
            size_hint_x: 0.65
            size_hint_y: 0.10
            pos_hint: {'center_x': 0.5, 'top': 0.66}

        MDTextField:
            id: dob_field
            hint_text:"YYYY-MM-DD(Date of Birth)"
            helper_text_mode: "on_focus"
            size_hint_x: 0.65
            size_hint_y: 0.10
            pos_hint: {'center_x': 0.5, 'top': 0.55}
            
        
        
        MDRoundFlatButton:
            text: "Edit Profile"
            font_size: "20sp"
            size_hint_x: 0.4
            pos_hint: {'center_x': 0.5, 'top': 0.40}
            on_press: root.edit_profile()
            
       
        
<NotificationScreen>:
    name: 'notifications'

    BoxLayout:
        orientation: 'vertical'
    
        MDTopAppBar:
            title: 'Notifications'
            md_bg_color: app.theme_cls.primary_color
            background_palette: 'Primary'
            elevation: 10
            left_action_items: [["arrow-left", lambda *args : setattr(root.manager, "current", "settings")]]
        
        ScrollView:
            MDList:
                id: notification_list
                spacing: '12dp'
    
        MDRaisedButton:
            text: 'Clear Notifications'
            md_bg_color: app.theme_cls.primary_color
            pos_hint: {'center_x': 0.5}
            on_release: app.clear_notifications()

    
<NotificationDetails>:
    size_hint: 0.9, 0.5
    orientation: "vertical"
    padding: "12dp"
    spacing: "12dp"
    MDLabel:
        id: notification_title
        text: ""
        halign: "center"
        font_style: "Subtitle1"
    MDLabel:
        id: notification_text
        text: ""
        halign: "center"
        font_style: "Body1"

<FoodHygiene>
    name: 'food_hygiene'
    BoxLayout:
        orientation: 'vertical'
        MDTopAppBar:
            id: toolbar
            title: 'Food Hygiene'
            pos_hint: {'top':1.0}
            left_action_items: [["arrow-left", lambda *args : setattr(root.manager, "current", "settings")]]
        
        GridLayout:
            cols: 1
            padding:10
            spacing:30
            

            MDTextButton:
                text:'Food Standards Agency Information'
                font_style: 'H6'
            
            MDTextButton:
                text:'click  below link for more Information'
                font_style: 'Subtitle1'
              

            MDTextButton:
                text: '[u]Avoiding crosscontamination[/u]'
                markup: True
                theme_text_color: 'Custom'
                text_color: hex('#298FE3')
                on_press:root.manager.current ='screen1'


            MDTextButton:
                text: '[u]Chilling[/u]'
                markup: True
                theme_text_color: 'Custom'
                text_color:hex('#298FE3')
                on_press:root.manager.current ='chilling'

            MDTextButton:
                text: '[u]Cleaning[/u]'
                markup: True
                theme_text_color: 'Custom'
                text_color:hex('#298FE3')
                on_press:root.manager.current ='cleaning'

            MDTextButton:
                text: '[u]Cooking your food[/u]'
                markup: True
                theme_text_color: 'Custom'
                text_color:hex('#298FE3')
                on_press:root.manager.current ='cooking_food'
            
            MDTextButton:
                text: '[u]Home food fact checker[/u]'
                markup: True
                theme_text_color: 'Custom'
                text_color: hex('#298FE3')
                on_press:root.manager.current ='fact_checker'

<Screen1>: 
    BoxLayout:
        orientation: 'vertical'
        size_hint: 1, 1  
        padding: dp(5)  

        MDTopAppBar:
            id: toolbar
            title: "Back to previous Page"
            pos_hint: {'top': 1.0}
            left_action_items: [["arrow-left", lambda *args: setattr(root.manager, "current", "fridge_hygiene")]]
       
        ScrollView:  
            size_hint: 1, None
            height: self.parent.height - toolbar.height  

            GridLayout:
                cols: 1
                size_hint_y: None   
                height: self.minimum_height  
                MDLabel:
                    text:"[b]Avoiding cross-contamination[/b]\n\nHow to avoid cross-contamination by following simple practices in the preparation and handling of food products.\n\nBacterial cross-contamination is most likely to happen when raw food touches or drips onto ready-to-eat food, utensils or surfaces.\n\nYou can avoid it by:\n\n[b]Preparing food hygienically[/b]\n\nuse different utensils, plates and chopping boards for raw and cooked food\nwash utensils, plates and chopping boards for raw and cooked food thoroughly between tasks \nmake sure you do not wash raw meat\nwash your hands after touching raw food and before you handle ready-to-eat food\n\n[b]Storing food effectively[/b]\n\ncover raw food, including meat, and keeping it separate from \nready-to-eat food use any dish that has a lip to prevent spillages\nstore covered raw meat, poultry, fish and shellfish on the bottom shelf of your fridge use different utensils, plates and chopping boards for raw and cooked food\n\n[b]Using shopping bags safely[/b]\n\nmake sure you take enough shopping bags to pack raw and ready-to-eat food\nseparately take extra bags to pack cleaning products and other household \nitems separately from food label or colour code your bags to show what you intend to use them for\ncheck your bags for spillages after every use. If there has been visible spillage, soiling or damage, plastic bags for life should ideally be used for another purpose (where no safety risk will occur) or replaced\nconsider using cotton/fabric bags for life as they can be put in the washing machine and cleaned\nreplace old plastic bags\nkeep raw and ready to eat foods separate in your shopping\n\ntrolley or basket FSA Explains\n\nCross-contamination is what happens when bacteria or other microorganisms are unintentionally transferred from one object to another. The most common example is the transfer of bacteria between raw and cooked food.\n\nThis is thought to be the cause of most foodborne infections. For example, when you’re preparing raw chicken, bacteria can spread to your chopping board, knife and hands and could cause food poisoning.\n\nCross-contamination can also happen when bacteria is transferred in ways that are harder to see. For example, via reusable shopping bags, or in the drips and splashes produced when meat is washed which can contaminate other surfaces."
                    font_size: '12sp'
                    markup: True
                    size_hint_y: None  
                    height: self.texture_size[1]   
    

<Chilling>
    BoxLayout:
        orientation: 'vertical'
        size_hint: 1, 1   # Set the size hint to occupy the entire window
        padding: dp(5)   # Add padding to the layout

        MDTopAppBar:
            id: toolbar
            title: "Back to previous Page"
            pos_hint: {'top': 1.0}
            left_action_items: [["arrow-left", lambda *args: setattr(root.manager, "current", "fridge_hygiene")]]

        ScrollView:   # Add a ScrollView to handle scrolling when content overflows
            size_hint: 1, None
            height: self.parent.height - toolbar.height   # Set the height of the ScrollView based on the available space

            GridLayout:
                cols: 1
                size_hint_y: None   # Disable automatic height calculation
                height: self.minimum_height   # Set the height to accommodate the content

                MDLabel:
                    text: "[b]Chilling[/b]\n\nHow to chill, freeze and defrost food safely. Chilling food properly helps stop harmful bacteria from growing. \n\nTo keep your food safe: \nstore any food with a 'use by' date, as well as cooked dishes, salads and dairy products, in your fridge \nkeep chilled food out of the fridge for the shortest time possible during \npreparation cool cooked food quickly at room temperature and place in the fridge within one to two hours \nfollow storage instructions on packaging, including the best before and use-by dates \n\nCheck your fridge is cold enough using a fridge thermometer. The dials on fridges don't always show you the right temperature. Your fridge should be 5°C or below.\n\nDon't overfill your fridge. Leaving space allows air to circulate and maintains the set temperature.\n\nIf your fridge is looking full, take out items that don't need to be chilled, such as unopened soft drinks or bread. This will make room for the items that do need to be chilled for safety reasons, such as raw, ready-to-eat and cooked food.\n\n[b]Freezing your food[/b]\n\nA freezer acts as a pause button - food in a freezer won't deteriorate and most bacteria cannot grow in it. You can freeze pre-packaged food until midnight on the 'use by' date. Leftovers and homemade goods should be frozen as soon as possible. Cool any warm dishes before putting them in your freezer.\n\nTo stop the cold air in your freezer from drying out\nyour food: place food in an air-tight container\nwrap it well in freezer bags or freezer wrap\n\nIt doesn't matter if you cook your meat from frozen, once defrosted, or fresh, you can use your leftovers to make a new meal. This new meal can then be frozen, but make sure you only reheat it once (freezing in smaller portions will help). Love Food Hate Waste have more information on freezing leftovers, including recipe ideas.\n\nCheck packet instructions to ensure that foods are suitable for freezing, especially for ready-to- eat foods.\n\nFSA Explains\n\n[b]The Danger Zone[/b]\n\nThe cold temperatures of a domestic freezer (-18°C) delay chemical reactions within foods and put any bacteria that may be present on pause. The bacteria are still alive, but they stop growing or producing toxins.\n\nThe bacteria haven't been killed, and they may be revived as the food defrosts. Defrost food in the fridge to prevent it sitting in between 8 - 63 degrees centigrade, which is the Danger Zone. Between these temperatures the bacteria may grow and make you ill.\n\nIt is also the reason why we advise foods can't be refrozen if they are accidentally defrosted, unless they are cooked first. If the food has been defrosted it must be cooked before being eaten to be safe. Once defrosted, foods should be consumed within 24 hours.\n\n[b]Defrosting your food[/b]\n\nWhen you take your food out of the freezer, it's important to defrost it safely before cooking or eating it.\n\nDon't defrost food at room temperature. Ideally, food should be defrosted in the fridge in a container big enough to catch any drips. If this isn't possible, use a microwave on the defrost setting directly before cooking. Check the guidance on food packaging and allow enough time for your food to defrost properly. Large items, such as a 6-7kg Christmas turkey, can take up to 4 days to defrost fully in the fridge.\n\nWhen defrosting your food, make sure it has been fully defrosted, as partially defrosted food may not cook evenly. This means that harmful bacteria could survive the cooking process. Once food has been defrosted, cook it within 24 hours.\n\nFSA Explains\n\n[b]Why is it important to chill and defrost your food properly?[/b]\n\nSome foods need to be kept in the fridge to help slow down bacterial growth and keep them fresh and safe for longer. Generally, the colder the temperature, the slower bacteria will grow - but cold temperatures don't stop bacteria growing altogether (for example, listeria monocytogenes)."
                    font_size: '12sp'
                    markup: True
                    size_hint_y: None   # Disable automatic height calculation
                    height: self.texture_size[1]   # Set the height based on the content


<Cleaning>
    BoxLayout:
        orientation: 'vertical'
        size_hint: 1, 1  
        padding: dp(5)  

        MDTopAppBar:
            id: toolbar
            title: "Back to previous Page"
            pos_hint: {'top': 1.0}
            left_action_items: [["arrow-left", lambda *args: setattr(root.manager, "current", "fridge_hygiene")]]
       
        ScrollView:  
            size_hint: 1, None
            height: self.parent.height - toolbar.height  

            GridLayout:
                cols: 1
                size_hint_y: None   
                height: self.minimum_height  
                MDLabel:
                    text:"[b]Cleaning[/b]\n\nAdvice on how to clean effectively in the kitchen and prevent harmful bacteria from spreading onto food.\n\n[b]Hand washing[/b]\n\nYou should wash your hands before you prepare, cook or eat food. Where possible you should wash your hands with warm soapy water. If you're in a situation where it's not possible to wash your hands, for example at a picnic, you can use hand-sanitising wipes or gels to disinfect them before handling food.\n\n[b]Bacteria and viruses[/b]\n\nYou are removing harmful bacteria by cleaning with warm, soapy water or by using disinfectant cleaning products. You should regularly clean your:\n\nhands\nwork surfaces\nchopping boards\nknives\n\nYou are not actually killing the bacteria when you wash in this way. To kill the bacteria you need to wash the surfaces at temperatures above 70°C and maintain that temperature for some time. This temperature is too hot for your hands without the risk of serious scalding.\n\nHowever, by washing with warm, soapy water, the lather and physical motion will detach the bacteria from the surface. The bacteria will be washed down the drain and will be removed from the waste water by the water treatment system.\n\nWhile it is possible to clean with cold water, warm water will ensure that the soap or detergent lathers up properly. It is important that the soap lathers so it can be more effective at removing the bacteria.\n\n[b]Cleaning kitchen items[/b]\n\n[b]Dish cloths[/b]\n\nWash or change dish cloths, tea towels, sponges and oven gloves regularly. It's important to let them dry before you use them again. This is because dirty, damp cloths allow bacteria to breed.\n\n[b]Utensils and serving dishes[/b]\n\nTake care to keep all utensils and dishes clean before preparing food. This is to avoid cross- contamination. You should use different utensils, plates and chopping boards when preparing ready-to-eat foods and raw foods that require cooking. Remember to wash them thoroughly between tasks to avoid the spread of harmful bacteria.\n\n[b]Cleaning food[/b]\n\n[b]Raw meat[/b]\n\nYou should not wash raw meat. Washing meat under a tap can splash bacteria onto your hands, clothes, utensils and worktops.\n\nWashing raw meat, such as chicken, can spread harmful bacteria like campylobacter. Thorough cooking will kill any bacteria present.\n\n[b]Fruit and vegetables[/b]\n\nRemember to wash fruit and vegetables with water before you eat them. This is to make sure that they are clean and harmful bacteria can be removed from the outside. You should wash them under a running tap, or in a bowl of fresh water, making sure to rub their skin under the water.You can start with the least soiled items first and give each of them a final rinse.\n\nPeeling vegetables can also remove more bacteria, so this is an additional precaution you can take when intending to eat root vegetables raw.\n\n[b]Cleaning products[/b]\n\nA wide range of products are available for cleaning and disinfection. You should read the manufacturer's instructions carefully to ensure that the product is suitable for food surfaces and that you are using it correctly.\n\nTo effectively kill any harmful bacteria properly, you should make sure you:\n\nleave the cleaning product on the surface for the time specified in the instructions read the manufacturer's guidance to check if it needs to be diluted before use\n\nCleaning products will be classed as detergents, disinfectants or sanitizers.\n\n[b]Detergents[/b]\n\nDetergents clean the surface and remove grease, but they do not kill bacteria.\n\n[b]Disinfectants[/b]\n\nDisinfectants kill bacteria. They should be used on a visibly clean surface. They do not work effectively if the surface is covered in grease or visible dirt. It is important that you follow the specified contact times for the products to be effective.\n\n[b]Sanitisers[/b]\n\nSanitisers can be used to clean and disinfect as part of a two-stage approach. First use the sanitiser to clean the surface. This will remove any:\n\ndirt\nfood \ngrease\n\nYou should then re-apply the sanitiser to the visibly clean surface and leave for the required time. This will disinfect the surface."
                    font_size: '12sp'
                    markup: True
                    size_hint_y: None  
                    height: self.texture_size[1]   

<Cooking_Food>
    BoxLayout:
        orientation: 'vertical'
        size_hint: 1, 1  
        padding: dp(5)  

        MDTopAppBar:
            id: toolbar
            title: "Back to previous Page"
            pos_hint: {'top': 1.0}
            left_action_items: [["arrow-left", lambda *args: setattr(root.manager, "current", "fridge_hygiene")]]
       
        ScrollView:  
            size_hint: 1, None
            height: self.parent.height - toolbar.height  

            GridLayout:
                cols: 1
                size_hint_y: None   
                height: self.minimum_height  
                MDLabel:
                    text:"[b]Cooking your food[/b]\n\nHow to cook your food to prevent food poisoning.\n\nCooking food at the right temperature and for the correct length of time will ensure that any harmful bacteria are killed. Always check the advice on food packaging and follow the cooking instructions provided.\n\n[b]Meat[/b]\n\nBefore you serve pork, poultry and minced meat, make sure it is steaming hot and cooked all the way through. When you cut into the thickest part of the meat, check that none of the meat is pink and that any juices run clear. In a whole bird this is the area between the leg and the breast.\n\nFollow this advice when\n\ncooking: turkey\nchicken\nduck \ngoose\npork\nminced meat products such as kebabs, sausages and burgers\n\nWhen roasting a whole bird such as chicken or turkey, we advise that birds are cooked unstuffed, with any stuffing cooked in a separate tray or dish. This is because stuffed birds will take longer to cook and may not cook thoroughly.\n\n[b]Northern Ireland[/b]\n\nFor Northern Ireland specific advice on Avian Influenza please refer to the Department of Agriculture, Environment and Rural Affairs (DAERA).\n\n[b]Frozen vegetables[/b]\n\nMost frozen vegetables, including sweetcorn, will need to be cooked before you can eat them.\n\nIf you intend to use frozen sweetcorn or other vegetables as part of a cold salad, check the instructions on the packaging first. If the advice is that the sweetcorn or other frozen vegetables should be cooked, you must ensure that this is done before they are eaten cold.\n\nAfter cooking, the food should be:\n\ncooled down as quickly as possible (ideally within two hours) stored in a fridge\neaten within two days\nfrozen to eat later, if you think you won’t be able to eat it within two days\n\nFor more information on safely cooling and storing foods, including freezing advice, read our guidance on chilling food.\n\n[b]Cooking methods[/b]\n\nWhen food is cooked in an oven, it is through a combination of three different heat transfer methods.\n\n[b]Radiant or direct heat[/b]\n\nThis is where the flames at the back of a gas oven or the element in an electric oven cook the food.\n\n[b]Conduction[/b]\n\nThis is where the heat travels through the shelf, into the baking tray/dish and then on into the food.\n\n[b]Convection[/b]\n\nThis is where the air within the oven is heated and travels over and through the food. It is particularly important in a fan assisted oven and is the reason these cook foods faster.\n\n[b]Alternative cooking methods[/b]\n\nMeals can also be prepared using appliances such as a microwave, crock pot or air fryer. Depending on the cooking method and appliance efficiency, foods will require different times and temperatures to be properly cooked. Also, while different foods can be cooked together, they may require different times and temperatures.\n\nPlease refer to the instructions for your appliance for cooking advice on specific foods. In some appliances, you should leave some space around the food so that it can cook properly e.g. chicken legs in an air fryer.\n\nWhen cooking pork, poultry or minced meat (including burgers and sausages), make sure they are steaming hot and cooked all the way through before serving. Cut through the thickest part of the meat to ensure none of the meat is pink and the juices run clear.\n\nIf you are heating food in a microwave, it’s important to stir the food halfway through heating and to make sure that it is steaming hot before eating. Microwaves can heat in ‘pockets’ so stirring ensures that there are no pockets of cold food in your meal.\n\n[b]Why you shouldn't serve burgers rare or pink[/b]\n\nWhole cuts of meat, such as steaks and joints, only ever have bacteria on the outside surface of the meat.\n\nWhen meat is minced to make a burger, any harmful bacteria from the surface of the meat can get spread throughout the burger. As a result, rare and undercooked burgers can have harmful bacteria on the inside and may cause food poisoning if not fully cooked.\n\nMore about burgers \n\nFSA Explains\n\n[b]Avian Influenza (bird flu)[/b]\n\nAvian Influenza (also known as bird flu) poses a very low food safety risk for consumers. Properly cooked poultry meat and poultry meat products are safe to eat. This means that our advice on consumption of poultry meat and poultry meat products, including eggs, does not change during outbreaks of Avian Influenza.\n\nThe Department for Environment, Food and Rural Affairs (DEFRA) has further advice on Avian Influenza."
                    font_size: '12sp'
                    markup: True
                    size_hint_y: None  
                    height: self.texture_size[1]   



<Fact_Checker>
    BoxLayout:
        orientation: 'vertical'
        size_hint: 1, 1  
        padding: dp(5)  

        MDTopAppBar:
            id: toolbar
            title: "Back to previous Page"
            pos_hint: {'top': 1.0}
            left_action_items: [["arrow-left", lambda *args: setattr(root.manager, "current", "fridge_hygiene")]]
       
        ScrollView:  
            size_hint: 1, None
            height: self.parent.height - toolbar.height  

            GridLayout:
                cols: 1
                size_hint_y: None   
                height: self.minimum_height  
                MDLabel:
                    text:"[b]Home food fact checker[/b]\n\nKnowing how to store, cook and reheat food at home helps improve food safety and reduce food waste.\n\nThis page has advice on some common household food safety questions like the sniff test and the egg float test.\n\nHere we answer some of the most common food safety questions we get asked about different types of food.\n\nFSA Explains\\n\nThere are a number of myths and misconceptions about how long you can store food, when you know it’s gone off, and how to keep your food safe at home. By fact-checking the most common questions, we hope this will help you to stay safe and avoid throwing away good food unnecessarily.\n\n[b]Milk[/b]\n\n[b]Does the sniff test work for milk and dairy food?[/b]\n\nIt's not safe to use the sniff test for any food with a use-by date. The sniff test won't work as you can't smell the bugs that cause food poisoning.\n\nMilk and some other dairy products like yoghurt can have either a use-by date or a best before date. The manufacturer decides which date marking is the best for the food they produce.Whether these foods have a use-by or best before date is down to the manufacturer and the way the food is processed.\n\nIf a food has a best before date the sniff test can be used - the best before date is about quality, not safety. You can smell food with a best before date to see if it has spoiled. You can also use visual cues, such as whether you can see mould or if there are any changes to texture. Food with best before can be eaten after the date on the pack, however they may not taste as good as they did before.\n\nIt's always better to check the storage, use-by and best before dates when you buy food so you can help ensure it's safe and to prevent waste.\n\nFor more on the sniff test and date markings please visit our page on best before and use-by dates.\n\n[b]Rice[/b]\n\n[b]How long can you safely eat rice for after cooking?[/b]\n\nRice may be eaten cold if it is cooled down quickly. Put the rice in the fridge and consume within 24 hours.\n\nYou can get food poisoning from eating reheated rice. It's not the reheating that causes the problem, but the way the rice has been stored before it's reheated.\n\nKeep rice in the fridge for no more than one day until reheating. When you reheat any rice always check the dish is steaming hot all the way through.\n\nUncooked rice can contain spores of a bacterium called Bacillus cereus. This bacteria can cause food poisoning. The spores of Bacillus cereus can survive being cooked. The longer cooked rice is left at room temperature, the more likely it is that the bacteria or toxins will make the rice unsafe to eat.\n\n[b]Can you reheat rice?[/b]\n\nYes, but you should never reheat rice more than once. And when you do reheat rice, make sure it is steaming hot all the way through.\n\nIf you have leftover rice you should chill it as quickly as possible, ideally within one hour. Dividing it into smaller portions can help with this. Also don't leave rice in the rice cooker, steamer or pan to cool down.\n\n[b]Can you reheat takeaway rice?[/b]\n\nYou should never reheat rice more than once. Extra care should be taken with takeaway rice. Ideally, takeaway rice should be eaten shortly after purchase or shortly after it has been delivered.\n\nThis is because some food businesses may pre-cook their rice and then re-heat it before it is given to customers. Whether it is safe to reheat the cooked rice will depend on how it was stored, handled and if it was cooked outright in the first place. It’s always worth asking the takeaway business how they handle the rice.\n\n[b]Can you freeze rice?[/b]\n\nYou can freeze rice but should cool the rice quickly before putting it in the freezer, and if you portion it out into smaller containers this will help chill it faster. To do this you could place the container of rice in cold water and once cool, cover and store it in the freezer. By making sure rice goes in the freezer within an hour of cooking, you will stop bacteria multiplying and producing a toxin. Before eating, you should defrost your rice in the fridge and then reheat it until it is steaming hot before eating immediately.\n\n[b]Eggs[/b]\n\n[b]Does the egg float test work?[/b]\n\nWe do not suggest using the egg float test to show whether the eggs are safe as it assesses age, not safety. The float test can't show you which bacteria have been growing inside the egg. The egg floats because more air gets inside the older it gets, so it's an indicator of age, not safety.\n\n[b]Are eggs safe to eat after the best before date?[/b]\n\nEggs are safe to eat for a couple of days after the best before date if they are cooked well. The best before date should be stamped on the egg. You should make sure both the white and yolk of the egg are cooked thoroughly. You can use eggs a couple of days after the best before date in cooking or baking.\n\n[b]Are raw eggs safe to eat?[/b]\n\nThere have been improved food safety controls in the UK hen egg industry in recent years. So infants, children, people who are pregnant, and people aged 65 or over can now safely eat raw or lightly cooked hen eggs, or foods containing them if they have a British Lion mark or are produced under the Laid in Britain egg assurance scheme.\n\nThis advice does not apply to individuals who are severely immunocompromised and require medically supervised diets prescribed by health professionals.\n\nThis advice remains valid during outbreaks of Avian Influenza, also known as Bird flu. Bird flu poses a very low food safety risk for consumers and does not change our advice on consumption of eggs. The Department for Environment, Food and Rural Affairs (DEFRA) has further advice on Avian Influenza.\n\n[b]Should you store eggs in the fridge?[/b]\n\nEggs should be stored in a cool, dry place. Ideally, eggs should be stored in the fridge. The storage area should be cleaned regularly. Follow the manufacturer’s advice and avoid storing eggs where they would be exposed to extreme temperature changes. Temperature changes can lead to condensation on the surface, which causes increased penetration of Salmonella from the outside of the shell into the egg.\n\n[b]Can I freeze eggs?[/b]\n\nEggs can be frozen and used safely at a later date. Simply crack your eggs into a container, seal and freeze. You can separate yolks from whites first if you prefer and then put them into separate containers.\n\nLabel the containers so you can easily identify them when you wish to use them. You can also crack the egg into a sealable container and beat it before freezing. This can be easily used to make scrambled eggs or an omelette.\n\n[b]Fruit[/b]\n\n[b]Can you eat brown bananas?[/b]\n\nFruit that is a bit overripe, such as brown bananas, wrinkly apples and slightly mushy strawberries, can be eaten normally, as long as they don’t contain any mould. Overripe fruit is great for cooking, baking and made into smoothies.\n\n[b]Should you wash fruit?[/b]\n\nRemember to wash fruit and vegetables with water before you eat them. This is to make sure that they are clean and harmful bacteria can be removed from the outside. You should wash them under a running tap, or in a bowl of fresh water, making sure to rub their skin under the water.You can start with the least soiled items first and give each of them a final rinse.\n\n[b]Can you still eat food if you remove the mouldy part?[/b]\n\nFood that is obviously rotten or containing mould should not be eaten. This is due to potential risks from the mould. This advice is especially important for people in vulnerable groups. This includes children, people who are pregnant, people aged 65, and those who have a weakened immune system.\n\nWhile it is possible that removing the mould and a significant amount of the surrounding product could remove any unseen toxins that are present, there is no guarantee that doing so would remove them all.\n\n[b]Vegetables[/b]\n\n[b]Can you eat potatoes when they go green and start to sprout?[/b]\n\nIf potatoes have sprouted, simply remove the sprouts before use. Remember to cut off any green or rotten bits before using.\n\nGreen bits on potatoes can contain high levels of natural toxins called glycoalkaloids which are usually found in potatoes at low levels, but they can be higher in:\n\ngreen parts \ndamaged parts\nsprouted parts\n\nHigh levels of glycoalkaloids can upset the digestive system and cause symptoms such as abdominal pain, vomiting and diarrhoea. However, glycoalkaloid poisoning is extremely rare, even though potatoes are eaten in very large amounts in many countries.\n\nTo avoid high levels of glycoalkaloids being produced in potatoes, store them in a cool, dark and dry place.\n\n[b]Can potatoes be frozen?[/b]\n\nYou can freeze cooked or parboiled potatoes which have been boiled for 5 minutes. Leftover cooked potatoes can also be frozen. You can roast boiled potatoes straight from the freezer, make sure they are steaming hot all the way through. Put them in the oven with a little oil to crisp up.\n\n[b]Can you store potatoes in the fridge?[/b]\n\nYes, if you wish to help avoid food waste, you can choose to store potatoes either in the fridge or in a cool, dark, dry place.\n\nA recent study, which has been reviewed by the Committee on the Toxicity of Chemicals in Food, Consumer Products and the Environment (COT), has shown that home storage of potatoes in the fridge doesn’t materially increase acrylamide forming sugars, known as cold sweetening, when compared to storage in a cool, dark place.\n\n[b]How long can you eat vegetables after their best before date?[/b]\n\nVegetables past their best before date may become wrinkly or mushy, but are safe to eat as long as there is no visible sign of decay. Make sure to check for rotting or mould before eating.\n\nThe best before date is about quality, not safety. Food will be safe to eat after the best before date but may not be at its best. The length of time vegetables are acceptable to eat after a best before date can depend on the product and the storage instructions.\n\nWRAP’s food storage A to Z tool offers advice for different foods after the best before date.\n\n[b]Are raw kidney beans poisonous?[/b]\n\nCanned beans purchased in the supermarket are safe to consume as they have been pre-soaked and boiled to kill any toxins present."
                    font_size: '12sp'
                    markup: True
                    size_hint_y: None  
                    height: self.texture_size[1]  




# <ScannerScreen>:
#     BoxLayout:
#         orientation: 'vertical'
#         ZBarCam:
#             id: qrcodecam
#         Label:
#             size_hint: None, None
#             size: self.texture_size[0], 50
            # text: ' '.join([str(symbol.data) for symbol in qrcodecam.symbols])   
          
<HomeScreen>
    BoxLayout:
        orientation: 'vertical'
        MDTopAppBar:
            title: 'Home Page'
            md_bg_color: app.theme_cls.primary_color
            elevation: 5
            right_action_items: [['delete-forever', lambda *args :setattr(root.manager, "current", "FoodTrack")],['dots-vertical', lambda *args :setattr(root.manager, "current", "FoodTrack")]]
        BoxLayout:
            orientation: 'horizontal'
            padding: 10
            
            GridLayout:
                cols: 2
                
                # spacing: dp(5)

                BoxLayout:  # fridge right
                    id: fridge_right
                    orientation: 'vertical'
                    padding: dp(10)
                    # spacing: dp(10)
                    radius: [30, 0, 0, 30]
                    canvas.before:
                        Color:
                            rgba: 0, 0, 0, 1
                        Line:
                            width: dp(5)
                            rounded_rectangle: (self.x, self.y, self.width, self.height, 30, 30)

                    BoxLayout:  # Box 1
                        id: box_1
                        orientation: 'vertical'
                        canvas.before:
                            Color:
                                rgba: 0, 0, 0, 1
                            Line:
                                width: dp(5)
                                rectangle: (self.x, self.y, self.width, self.height)

                    BoxLayout:  # Box 2
                        id: box_2
                        orientation: 'horizontal'
                        canvas.before:
                            Color:
                                rgba: 0, 0, 0, 1
                            Line:
                                width: dp(5)
                                rectangle: (self.x, self.y, self.width, self.height)

                    BoxLayout:  # Box 3
                        id: box_3
                        orientation: 'horizontal'
                        canvas.before:
                            Color:
                                rgba: 0, 0, 0, 1
                            Line:
                                width: dp(5)
                                rectangle: (self.x, self.y, self.width, self.height)

                    BoxLayout:  # Box 4
                        id: box_4
                        orientation: 'horizontal'
                        canvas.before:
                            Color:
                                rgba: 0, 0, 0, 1
                            Line:
                                width: dp(5)
                                rectangle: (self.x, self.y, self.width, self.height)

                    BoxLayout:  # Box 5
                        id: box_5
                        orientation: 'horizontal'
                        canvas.before:
                            Color:
                                rgba: 0, 0, 0, 1
                            Line:
                                width: dp(5)
                                rectangle: (self.x, self.y, self.width, self.height)

                    BoxLayout:  # Box 6
                        id: box_6
                        orientation: 'horizontal'
                        canvas.before:
                            Color:
                                rgba: 0, 0, 0, 1
                            Line:
                                width: dp(5)
                                rectangle: (self.x, self.y, self.width, self.height)

                    BoxLayout:  # Box 7
                        id: box_7
                        orientation: 'horizontal'
                        canvas.before:
                            Color:
                                rgba: 0, 0, 0, 1
                            Line:
                                width: dp(5)
                                rectangle: (self.x, self.y, self.width, self.height)

                    BoxLayout:  # Box 8
                        id: box_8
                        orientation: 'horizontal'
                        canvas.before:
                            Color:
                                rgba: 0, 0, 0, 1
                            Line:
                                width: dp(5)
                                rectangle: (self.x, self.y, self.width, self.height)

                BoxLayout:  # fridge left
                    id: fridge_left
                    orientation: 'vertical'
                    padding: dp(10)
                    # spacing: dp(10)
                    radius: [0, 30, 30, 0]
                    canvas.before:
                        Color:
                            rgba: 0, 0, 0, 1
                        Line:
                            width: dp(5)
                            rounded_rectangle: (self.x, self.y, self.width, self.height, 30, 30)

                    BoxLayout:  # Box 9
                        id: box_9
                        orientation: 'horizontal'
                        canvas.before:
                            Color:
                                rgba: 0, 0, 0, 1
                            Line:
                                width: dp(5)
                                rectangle: (self.x, self.y, self.width, self.height)

                    BoxLayout:  # Box 10
                        id: box_10
                        orientation: 'horizontal'
                        canvas.before:
                            Color:
                                rgba: 0, 0, 0, 1
                            Line:
                                width: dp(5)
                                rectangle: (self.x, self.y, self.width, self.height)

                    BoxLayout:  # Box 11
                        id: box_11
                        orientation: 'horizontal'
                        canvas.before:
                            Color:
                                rgba: 0, 0, 0, 1
                            Line:
                                width: dp(5)
                                rectangle: (self.x, self.y, self.width, self.height)

                    BoxLayout:  # Box 12
                        id: box_12
                        orientation: 'vertical'
                        canvas.before:
                            Color:
                                rgba: 0, 0, 0, 1
                            Line:
                                width: dp(5)
                                rectangle: (self.x, self.y, self.width, self.height)
                        
                        GridLayout:
                            cols: 2
                            BoxLayout:  # box 12 child layout1
                                id: box_12_child_layout1
                                orientation: 'horizontal'
                                padding: dp(10)
                                # spacing: dp(10)
                                radius: [0, 0, 0, 0]
                                canvas.before:
                                    Color:
                                        rgba: 0, 0, 0, 1
                                    Line:
                                        width: dp(5)
                                        rounded_rectangle: (self.x, self.y, self.width, self.height, 30, 30)
                            
                            BoxLayout:  # box 12 child layout2
                                id: box_12_child_layout2
                                orientation: 'horizontal'
                                padding: dp(10)
                                # spacing: dp(10)
                                radius: [0, 0, 0, 0]
                                canvas.before:
                                    Color:
                                        rgba: 0, 0, 0, 1
                                    Line:
                                        width: dp(5)
                                        rounded_rectangle: (self.x, self.y, self.width, self.height, 30, 30)

                    BoxLayout:  # Box 13
                        id: box_13
                        orientation: 'vertical'
                        canvas.before:
                            Color:
                                rgba: 0, 0, 0, 1
                            Line:
                                width: dp(5)
                                rectangle: (self.x, self.y, self.width, self.height)
                        GridLayout:
                            cols: 2
                            BoxLayout:  # box 13 child layout1
                                id: box_13_child_layout1
                                orientation: 'horizontal'
                                padding: dp(10)
                                # spacing: dp(10)
                                radius: [0, 0, 0, 0]
                                canvas.before:
                                    Color:
                                        rgba: 0, 0, 0, 1
                                    Line:
                                        width: dp(5)
                                        rounded_rectangle: (self.x, self.y, self.width, self.height, 30, 30)
                            
                            BoxLayout:  # box 13 child layout2
                                id: box_13_child_layout2
                                orientation: 'horizontal'
                                padding: dp(10)
                                # spacing: dp(10)
                                radius: [0, 0, 0, 0]
                                canvas.before:
                                    Color:
                                        rgba: 0, 0, 0, 1
                                    Line:
                                        width: dp(5)
                                        rounded_rectangle: (self.x, self.y, self.width, self.height, 30, 30)

        MDBoxLayout:
            orientation: 'horizontal'
            size_hint: 1, 0.1
            pos_hint: {'bottom': 0}
            spacing: dp(10)
            md_bg_color: hex('#0990F9')
            canvas:
                Rectangle:
                    size: self.size

            MDIconButton:
                size_hint: 0.3, 1
                icon: "home"
                on_release: app.root.current = 'home'

            MDIconButton:
                size_hint: 0.3, 1
                icon: "images/sicon.png"
                on_release: app.root.current = 'settings'

            MDIconButton:
                size_hint: 0.3, 1
                icon: "camera"
                on_release: app.root.current = 'camera'

  

<CustomListItem>:
    OneLineListItem:
        text: root.text


<ListDialog>:
    size_hint: None, None
    size: "250dp", "250dp"

    ScrollView:
        MDList:
            id: list_content


<FoodTrack>:
    name: 'FoodTrack'
    MDTopAppBar:
        id: toolbar
        title: 'Food Tracker'
        pos_hint: {'top':1.0}
        left_action_items: [["arrow-left", lambda *args : setattr(root.manager, "current", "home")]]
    
    GridLayout:
        cols:1
        pos_hint: {'top':0.8}
        spacing:20
        padding:5


        MDRectangleFlatButton:
            font_size: "16sp"
            # on_release: root.show_dialog("Red Button Clicked")
            size_hint_x: None
            md_bg_color: 255, 0, 0, 1
            on_release: app.root.current = 'expiry_item_screen'

        MDRectangleFlatButton:
            font_size: "16sp"
            # on_release: root.show_dialog("Amber Button Clicked")
            size_hint_x: None
            md_bg_color:255, 191, 0, 1
            on_release: app.root.current = 'useby_item_screen'

        MDRectangleFlatButton:
            font_size: "16sp"
            # on_release: root.show_dialog("Green Button Clicked")
            size_hint_x: None
            pos_hint: {'center_x': 0.5}
            md_bg_color: 0, 100, 0, 1
            on_release: app.root.current = 'green_item_screen'





<ExpiryDateScreen>:
    BoxLayout:
        orientation: 'vertical'
        size_hint: 1, 1  
        padding: dp(5) 

        MDTopAppBar:
            id: toolbar
            title:"Update Expiry Date"
            pos_hint: {'top': 1.0}
            left_action_items:[["arrow-left", lambda *args : setattr(root.manager, "current", "home")]]
                        
        

        ScrollView:
            GridLayout:
                id: grid_layout
                cols: 2
                spacing: "10dp"
                padding: "10dp"
                size_hint_y: None
                height: self.minimum_height

        MDFlatButton:
            text: "Update"
            halign: "center"
            pos_hint: {"center_x": 0.5}
            md_bg_color: get_color_from_hex("#258fff")
            on_release: root.update_data()



<ExpiryItemScreen>:
    BoxLayout:
        orientation: 'vertical'
        size_hint: 1, 1  
        padding: dp(5) 

        MDTopAppBar:
            id: toolbar
            title:"Expiry Items"
            pos_hint: {'top': 1.0}
            left_action_items:[["arrow-left", lambda *args : setattr(root.manager, "current", "FoodTrack")]]
        
        MDScrollView:

            MDList:
                id: container


<GreenItemScreen>:
    BoxLayout:
        orientation: 'vertical'
        size_hint: 1, 1  
        padding: dp(5) 

        MDTopAppBar:
            id: toolbar
            title:"Green Items"
            pos_hint: {'top': 1.0}
            left_action_items:[["arrow-left", lambda *args : setattr(root.manager, "current", "FoodTrack")]]
        
        MDScrollView:

            MDList:
                id: container


<UseByDateItemScreen>:
    BoxLayout:
        orientation: 'vertical'
        size_hint: 1, 1  
        padding: dp(5) 

        MDTopAppBar:
            id: toolbar
            title:"UseBy Date Item"
            pos_hint: {'top': 1.0}
            left_action_items:[["arrow-left", lambda *args : setattr(root.manager, "current", "FoodTrack")]]
        
        MDScrollView:

            MDList:
                id: container



















# previous Login and Register code


# <LoginScreen>:
#     MDTopAppBar:
#         id: toolbar
#         title: "User Login"
#         pos_hint: {'top':1.0}
#         md_bg_color: 0, 0.7, 1, 1
      
#     FloatLayout:
#         size_hint: 1, 1
#         pos_hint: {'top':0.9}


#         MDIcon:
#             icon: "account"
#             halign: "center"
#             valign: "center"
#             font_size: "48sp"
#             theme_text_color: "Primary"
#             pos_hint: {'center_x': 0.5, 'top': 0.90}
            
#         MDTextField:
#             id: email_field
#             hint_text: "Email"
#             helper_text_mode: "on_focus"
#             size_hint_x: None
#             width: 400
#             pos_hint: {'center_x': 0.5, 'top': 0.75}

#         MDTextField:
#             id: password_field
#             hint_text: "Password"
#             helper_text_mode: "on_focus"
#             size_hint_x: None
#             width: 400
#             height:100
#             icon_right: "eye-off"
#             on_icon_right:root.toggle_password_visibility()
#             pos_hint: {'center_x': 0.5, 'top': 0.65}
#             password: True
        
#         MDTextButton:
#             text: "Forget Password"
#             font_size: "18sp"
#             theme_text_color: 'Custom'
#             text_color:  0, 0.7, 1, 1 
#             pos_hint: {'center_x': 0.65, 'top': 0.50}
#             on_press: root.manager.current = 'forget_password'
            
        
#         MDRoundFlatButton:
#             text: "Login"
#             font_size: "18sp"
#             size_hint_x: 0.3
#             pos_hint: {'center_x': 0.5, 'top': 0.40}
#             on_press: root.manager.current = 'home'
       
#         MDRoundFlatButton:
#             text: "Create An Account"
#             font_size: "18sp"
#             size_hint_x: 0.3
#             pos_hint: {'center_x': 0.5, 'top': 0.30}
#             on_press: root.manager.current = 'register'

# <ForgetPasswordScreen>:
#     MDTopAppBar:
#         id: toolbar
#         title: "Forget Password"
#         pos_hint: {'top':1.0}
#         md_bg_color: 0, 0.7, 1, 1 
#     FloatLayout:
#         size_hint: 1, 1
#         pos_hint: {'top':0.9}

#         MDTextField:
#             id: email_field
#             hint_text: "Enter your email here"
#             helper_text_mode: "on_focus"
#             size_hint_x: None
#             height: "48dp"
#             width: 450
#             pos_hint: {'center_x': 0.5, 'top': 0.80}              
           
# <RegisterScreen>:
#     MDTopAppBar:
#         id: toolbar
#         title: "User Registration"
#         anchor_title:"center"
#         pos_hint: {'top':1.0}
#         md_bg_color: 0, 0.7, 1, 1
        
    
#     FloatLayout:
#         size_hint: 1, 1
#         pos_hint: {'top':0.9}

#         MDTextField:
#             id: first_name_field
#             hint_text: "Firstname"
#             helper_text_mode: "on_focus"
#             size_hint_x: 0.65
#             size_hint_y: 0.10
#             pos_hint: {'center_x': 0.5, 'top': 0.99}

#         MDTextField:
#             id: last_name_field
#             hint_text: "Lastname"
#             helper_text_mode: "on_focus"
#             size_hint_x: 0.65
#             size_hint_y: 0.10
#             pos_hint: {'center_x': 0.5, 'top': 0.90}
#             password: True
        
#         MDTextField:
#             id: email_field
#             hint_text: "Email"
#             helper_text_mode: "on_focus"
#             size_hint_x: 0.65
#             size_hint_y: 0.10
#             pos_hint: {'center_x': 0.5, 'top': 0.81}
#             password: True

#         MDTextField:
#             id: password_field
#             hint_text: "Password"
#             helper_text_mode: "on_focus"
#             size_hint_x: None
#             size_hint_x: 0.65
#             size_hint_y: 0.10
#             pos_hint: {'center_x': 0.5, 'top': 0.72}
#             password: True

#         MDTextField:
#             id: confirm_password_field
#             hint_text: "Confirm Password"
#             helper_text_mode: "on_focus"
#             size_hint_x: 0.65
#             size_hint_y: 0.10
#             pos_hint: {'center_x': 0.5, 'top': 0.63}
#             password: True
        
#         MDRaisedButton:
#             id: dob_field
#             text: "Select Date of Birth"
#             size_hint_x: 0.2
#             size_hint_y: 0.01
#             pos_hint: {'center_x': 0.5, 'top': 0.51}
#             on_release: root.show_date_picker()
           

#         MDTextField:
#             id: phone_field
#             hint_text: "Phone Number"
#             helper_text_mode: "on_focus"
#             size_hint_x: 0.65
#             size_hint_y: 0.10
#             pos_hint: {'center_x': 0.5, 'top': 0.45}
#             password: True
        
#         # MDTextField:
#         #     id: clubcard_field
#         #     hint_text: "Clubcard Number"
#         #     helper_text_mode:"on_focus"
#         #     size_hint_x: None
#         #     width: 500
#         #     height:90
#         #     pos_hint: {'center_x': 0.5, 'top': 0.41}
#         #     password: True
        
#         MDRoundFlatButton:
#             text: "Register "
#             size_hint_x: None
#             width: root.width*0.4
#             pos_hint: {'center_x': 0.5, 'top': 0.30}
#             on_press: root.manager.current = 'home'
       
#         MDRoundFlatButton:
#             text: " Login here"
#             size_hint_x: None
#             width: root.width*0.4
#             size_hint_y: None
#             pos_hint: {'center_x': 0.5, 'top': 0.20}
#             on_press: root.manager.current = 'login'          
               

        









